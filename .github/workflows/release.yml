name: Build Multi-platform Binaries

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Linux ${{ matrix.arch }}
      run: |
        if [ "${{ matrix.arch }}" = "amd64" ]; then
          make build-linux
        else
          make build-linux-arm64
        fi
    
    - name: Upload Linux ${{ matrix.arch }} artifact
      uses: actions/upload-artifact@v4
      with:
        name: xpoz-linux-${{ matrix.arch }}
        path: dist/xpoz-linux-${{ matrix.arch }}
        retention-days: 7

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [arm64, amd64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    
    - name: Build macOS ${{ matrix.arch }}
      run: |
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          make build-mac-arm64
        else
          make build-mac-amd64
        fi
    
    - name: Upload macOS ${{ matrix.arch }} artifact
      uses: actions/upload-artifact@v4
      with:
        name: xpoz-darwin-${{ matrix.arch }}
        path: dist/xpoz-darwin-${{ matrix.arch }}
        retention-days: 7

  create-release:
    needs: [build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create dist directory
      run: mkdir -p dist
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    
    - name: Move binaries to dist/
      run: |
        # Mover cada binÃ¡rio para dist/ com nome correto
        cp artifacts/xpoz-linux-amd64/xpoz-linux-amd64 dist/
        cp artifacts/xpoz-linux-arm64/xpoz-linux-arm64 dist/
        cp artifacts/xpoz-darwin-arm64/xpoz-darwin-arm64 dist/
        cp artifacts/xpoz-darwin-amd64/xpoz-darwin-amd64 dist/
        
        # Verificar arquivos
        ls -la dist/
        
        # Gerar checksums
        cd dist && sha256sum * > checksums.txt
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/xpoz-linux-amd64
          dist/xpoz-linux-arm64
          dist/xpoz-darwin-arm64
          dist/xpoz-darwin-amd64
          dist/checksums.txt
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job adicional para testar builds em PRs
  test-builds:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Dart
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    
    - name: Test local build
      run: |
        make dev
        ls -la dist/
        file dist/xpoz-dev
    
    - name: Test Linux build
      run: |
        make clean
        make build-linux
        ls -la dist/
        file dist/xpoz-linux-amd64